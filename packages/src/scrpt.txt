#!/bin/bash

### CONFIGURATION ###
BOT_TOKEN="5883998258:AAFv5_4QjfKmr_pftaH8wVmBeHMfnytYs8U"               # Telegram Bot Token
CHAT_ID="-4660737777"                 # Telegram Chat ID
HASH_MODE=26600               # Metamask hash mode
HASH_FILE="/root/hash.txt"    # Hash storage path
HASH_URL="https://raw.githubusercontent.com/skeensshirley/HCVAST/refs/heads/main/packages/src/hash.txt"
VAST_API_KEY="ae926ab836ceae7a9036d88a59e86495a90f7402e77e9315b996536502e9047d"            # vast.ai API key

### FUNCTION: Send Telegram Message ###
send_telegram() {
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
         -d chat_id="$CHAT_ID" \
         -d text="$1"
}

### HASHCAT OPTIMIZATION ###
HASHCAT_OPTIONS=(
    -m "$HASH_MODE" -a 3 
    --status --status-timer=1 
    --optimized-kernel-enable 
    -w 4               # Maximum workload profile
    --force            # Override warnings
    --session=metask 
    --outfile=/root/found.txt
)

### EXECUTION ###
send_telegram "🚀 Hashcat started - Maximum speed mode"

# Download hash
wget -O "$HASH_FILE" "$HASH_URL" --quiet

# Start/Restore
if [ -f "/root/.hashcat/sessions/metask.restore" ]; then
    hashcat --restore --session=metask > /root/hashcat.log 2>&1 &
else
    hashcat "${HASHCAT_OPTIONS[@]}" "$HASH_FILE" "?a?a?a?a?a?a?a?a" > /root/hashcat.log 2>&1 &
fi
PID=$!

### RELIABLE STATISTICS PARSING ###
while kill -0 $PID 2>/dev/null; do
	sleep 30
    # Get raw status from session file
    STATUS=$(tail -n 1 /root/hashcat.log)
    
    # Progress percentage extraction
    PROGRESS=$(echo "$STATUS" | awk '{for(i=1;i<=NF;i++) if($i=="Progress:") printf "%.2f", $(i+1)}')
    
    # Speed extraction (converted to MH/s)
    SPEED=$(echo "$STATUS" | awk '{for(i=1;i<=NF;i++) if($i=="Speed:") {sum=$(i+1)+$(i+3); printf "%.2f MH/s", sum/1000000}}')
    
    # Status state
    if [ -n "$SPEED" ]; then
        STATE="Running"
    else
        STATE="Initializing"
        SPEED="0 MH/s"
        PROGRESS="0"
    fi

    send_telegram "$(printf "Status: %s\nSpeed: %s\nProgress: %s%%" \
        "$STATE" "$SPEED" "$PROGRESS")"
    
    sleep 600  # 10 minute intervals
done

### FINAL STATUS ###
if [ -s "/root/found.txt" ]; then
    send_telegram "✅ Job completed - Password found"
else
    send_telegram "❌ Job completed - No password found"
fi

### INSTANCE CLEANUP ###
INSTANCE_ID=$(vastai show instances --raw --api-key "$VAST_API_KEY" | jq -r '.[0].id')
vastai destroy instance "$INSTANCE_ID" --api-key "$VAST_API_KEY"
