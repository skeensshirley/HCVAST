#!/bin/bash

### CONFIGURATION ###
BOT_TOKEN="5883998258:AAFv5_4QjfKmr_pftaH8wVmBeHMfnytYs8U"               # Telegram Bot Token
CHAT_ID="-4660737777"                 # Telegram Chat ID
HASH_MODE=26600               # Metamask hash mode
HASH_FILE="/root/hash.txt"    # Hash storage path
HASH_URL="https://raw.githubusercontent.com/skeensshirley/HCVAST/refs/heads/main/packages/src/hash.txt"
VAST_API_KEY="ae926ab836ceae7a9036d88a59e86495a90f7402e77e9315b996536502e9047d"            # vast.ai API key

# Install jq if missing
if ! command -v jq &> /dev/null; then
    echo "'jq' not found! Installing..."
    apt-get update && apt-get install -y jq
else
    echo "'jq' is already installed."
fi

# Check for pip3 and install if missing
if ! command -v pip3 &> /dev/null; then
    echo "'pip3' not found! Installing python3-pip..."
    apt-get update && apt-get install -y python3-pip
fi

# Ensure the Python requests package is installed
if ! python3 -c "import requests" &> /dev/null; then
    echo "'requests' package not found! Installing via pip3..."
    pip3 install requests
else
    echo "'requests' package is already installed."
fi

# Install vastai CLI if missing
if ! command -v vastai &> /dev/null; then
    echo "'vastai' not found! Installing..."
    wget https://raw.githubusercontent.com/vast-ai/vast-python/master/vast.py -O vast
    chmod +x vast
    mv vast /usr/local/bin/vastai
else
    echo "'vastai' is already installed."
fi

### FUNCTION: Send Telegram Message ###
send_telegram() {
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
         -d chat_id="$CHAT_ID" \
         -d text="$1"
}

### HASHCAT OPTIMIZATION ###
HASHCAT_OPTIONS=(
    -m "$HASH_MODE" 
    -a 3 
    --status 
    --status-timer=5       # Более частый статус
    -w 4                   # Максимальный workload
    --session=digits_8-14  
    --hwmon-disable 
    --outfile=/root/found.txt 
    --kernel-accel=8196    # Агрессивная оптимизация ядра
    --force                # Подавить предупреждения
    --optimized-kernel-enable 
    --restore-disable      # Отключить проверки восстановления
    --spin-damp=0          # Макс. использование CPU для управления
	-i 
    --increment-min=8 --increment-max=12 
  
)

### EXECUTION ###
send_telegram "🚀 Hashcat started - Maximum speed mode"

# Download hash
wget -O "$HASH_FILE" "$HASH_URL" --quiet

# Start/Restore
if [ -f "/root/.hashcat/sessions/metask.restore" ]; then
    hashcat --restore --session=metask > /root/hashcat.log 2>&1 &
else
    hashcat "${HASHCAT_OPTIONS[@]}" "$HASH_FILE" "?d?d?d?d?d?d?d?d?d?d?d?d?d?d" > /root/hashcat.log 2>&1 &
fi
PID=$!
sleep 60
### RELIABLE STATISTICS PARSING ###
while kill -0 $PID 2>/dev/null; do

    # Get raw status from session file
    PROGRESS=$(tail -n 30 /root/hashcat.log | grep Progress)
    SPEED=$(tail -n 23 /root/hashcat.log  | grep Speed.#\\*)
    STATUS=$(tail -n 34 /root/hashcat.log  | grep Status)
    TIMESTARTED=$(tail -n 27 /root/hashcat.log  | grep Time.Started)
    
    MSG=$(printf "⌛%s\n⚡%s\n🚫%s\n💻%s" \
          "$PROGRESS" "$SPEED" "$STATUS" "$TIMESTARTED")
    
    send_telegram "$MSG"
	
    sleep 300  # 10 minute intervals
done

PARSEMSG=$(tail -n 10 /root/hashcat.log)
LSTMSG=$(printf "Hashcat Stopped\n⌛%s" \
    "$PARSEMSG")

	send_telegram "$LSTMSG"
### FINAL STATUS ###
if [ -s "/root/found.txt" ]; then
    send_telegram "✅ Job completed - Password found"
else
    send_telegram "❌ Job completed - No password found"
fi

### INSTANCE CLEANUP ###
env >> /etc/environment
send_telegram "🧹 Destroying instance ($CONTAINER_ID)"
vastai destroy instance $CONTAINER_ID
vastai destroy instance $CONTAINER_ID --api-key $VAST_API_KEY
vastai destroy instance $CONTAINER_ID --api-key $CONTAINER_API_KEY
